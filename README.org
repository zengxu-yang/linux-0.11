Build Linux kernel 0.11 on modern GCC 12. Run and debug it on modern QEMU with GDB. This is an ideal lab environment for OS study as Linux 0.11 is relatively small. Compared to Bochs, QEMU supports source level debugging with GDB, which can be very convenient for learning the Linux kernel.

Features
- Patched Linux kernel 0.11 that can be built on modern GCC 12 and runs on QEMU.
- Can be source debugged by GDB.
- GCC optimization is disabled for better debugging experience.
- QEMU Monitor is enabled when debugging Linux kernel 0.11 for more CPU internal info.

It has been tested on Debian 12. To run or debug it, you need to download the root image from [[https://github.com/JiangJiangjungle/oslab/blob/master/hdc-0.11.img][here]] and put it in the project root directory.

To install it, you need to install necessary tools.
#+begin_src text
  sudo apt install gcc gdb make bin86 qemu-system-x86 libc6-dev-i386
#+end_src
=libc6-dev-i386= is only needed to build 32-bit =tools/build.c= which is used to create =Image=.

Clone the source code, then
#+begin_src text
  make clean
  make
#+end_src
to build it. QEMU needs to be patched to debug 16-bit real mode code.

Enter =make run= to run it and =make debug= to debug it.

When entering =make debug=, QEMU will stop at address =0x000ffff0= in real mode. In another terminal, enter =gdb tools/system= to start GDB, then =target remote :1234= to start debugging. The QEMU Monitor can be used together with GDB to inspect some internal registers that are not shown in GDB, such as GDT/IDT/LDT/TR.
